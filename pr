#!/usr/bin/env bash

#
# List Pull-Requests of an Azure Project
#
# USAGE
#
#     pr                                       # list completed pull requests
#     pr TYPE                                  # list pull requests of TYPE: active, all, completed, abandoned [default: completed]
#     pr -v                                    # list pull requests and open in VisiData
#
# EXAMPLES
#
#     pr | grep 1234
#     pr | colgrep 1234 | less
#     pr all -v
#

show_help() {
  awk '/^[^ #]/{c=1}c==0{print $0}' $0 | sed -n '/^#/p' | sed 1d | sed 's/^#/ /g' \
    | perl -pe "s/ #(.*)$/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/(USAGE|EXAMPLES|COMMANDS)/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/\`(.+)\`/$(tput sgr 0 1)\1$(tput sgr 0)/"
  exit 1
}

help_envs() {
  echo -e >&2 "\n environment variable $(tput setaf 1)${1}$(tput sgr0) is not set."
  echo -e "\n export variables based on this URL:\n $(tput setaf 0)https://dev.azure.com/$(tput setaf 8)<organization>$(tput setaf 0)/$(tput setaf 8)<project>$(tput setaf 0)/_git/<$(tput setaf 8)repository>$(tput sgr0)"
  echo -e "\n    $(tput setaf 0)export AZDO_ORGANIZATION=\"$(tput setaf 8)<organization>$(tput setaf 0)\"$(tput sgr0)"
  echo -e "    $(tput setaf 0)export AZDO_PROJECT=\"$(tput setaf 8)<project>$(tput setaf 0)\"$(tput sgr0)"
  echo -e "    $(tput setaf 0)export AZDO_REPOSITORY=\"$(tput setaf 8)<repository>$(tput setaf 0)\"$(tput sgr0)"
  echo -e "    $(tput setaf 0)export AZDO_REVIEWER=\"$(tput setaf 8)<your-email>$(tput setaf 0)\"$(tput sgr0)"
  exit 1
}
[ -z "$AZDO_ORGANIZATION" ] && help_envs "AZDO_ORGANIZATION"
[ -z "$AZDO_PROJECT" ] && help_envs "AZDO_PROJECT"
[ -z "$AZDO_REPOSITORY" ] && help_envs "AZDO_REPOSITORY"
[ -z "$AZDO_REVIEWER" ] && help_envs "AZDO_REVIEWER"

csv=false
AZDO_STATUS="completed"

while [ $# -gt 0 ]; do
  case $1 in
    -v)
      csv=true
      ;;
    -h|--help)
      show_help
      ;;
    *)
      AZDO_STATUS=$1
      ;;
  esac
  shift
done

echo -e >&2 "\n $(tput setaf 2)${AZDO_STATUS^}$(tput sgr0) Pull-Requests of Project $(tput setaf 2)$AZDO_PROJECT$(tput sgr0):\n"

if [[ $csv == true ]]; then
  awk -F'\t' \
    -v org="$AZDO_ORGANIZATION" \
    -v proj="${AZDO_PROJECT/ /%20}" \
    -v repo="$AZDO_REPOSITORY" \
    'BEGIN{printf "\"Title\",\"URL\",\"Completion Date\"\n"}{printf "\"%s\",\"https://dev.azure.com/%s/%s/_git/%s/pullrequest/%s\",\"%s\"\n", $1, org, proj, repo, $2, substr($3, 0, 10)}' < \
    <(az repos pr list --org "https://dev.azure.com/${AZDO_ORGANIZATION}" -p "${AZDO_PROJECT}" -r "${AZDO_REPOSITORY}" --status "${AZDO_STATUS}" \
                       --query "[].{Title: title, PullRequestId: pullRequestId, Completion: completionQueueTime}" -o 'tsv') | vd
else
  awk -F'\t' \
    -v org="$AZDO_ORGANIZATION" \
    -v proj="${AZDO_PROJECT/ /%20}" \
    -v repo="$AZDO_REPOSITORY" \
    '{printf "%s\t\033[38;5;240mhttps://dev.azure.com/%s/%s/_git/%s/pullrequest/%s\033[0m\t%s\n", $1, org, proj, repo, $2, substr($3, 0, 10)}' < \
    <(az repos pr list --org "https://dev.azure.com/${AZDO_ORGANIZATION}" -p "${AZDO_PROJECT}" -r "${AZDO_REPOSITORY}" --status "${AZDO_STATUS}" \
                       --query "[].{Title: title, PullRequestId: pullRequestId, Completion: completionQueueTime}" -o 'tsv') |
    column -t -s $'\t'
fi
